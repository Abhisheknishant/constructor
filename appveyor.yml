# https://ci.appveyor.com/project/ContinuumAnalyticsFOSS/constructor

branches:
  only:
    - master

environment:
  global:
    PYTHON: "C:\\conda"
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci-helpers\\appveyor\\windows_sdk.cmd"
    PYTHON_ARCH: "64" # needs to be set for CMD_IN_ENV to succeed. If a mix
                      # of 32 bit and 64 bit builds are needed, move this
                      # to the matrix section.

  matrix:
    - PYTHON_VERSION: "3.6"
      CONDA_VERSION: "4.3"
    - PYTHON_VERSION: "2.7"
      CONDA_VERSION: "4.3"
    - PYTHON_VERSION: "3.6"
      CONDA_VERSION: "4.5"
    - PYTHON_VERSION: "3.6"
      CONDA_VERSION: "4.6"
    - PYTHON_VERSION: "3.6"
      CONDA_VERSION: "4.7"
    - PYTHON_VERSION: "3.6"
      CONDA_CANARY: "true"

matrix:
  allow_failures:
    - PYTHON_VERSION: "3.6"
      CONDA_CANARY: "true"

platform:
  -x64

cache:
  - "C:\\condacache\\pkgs"

install:
  - if "%PYTHON_VERSION:~0,1%" == "3" set "BASE_PYTHON_VERSION=%PYTHON_VERSION:.=%"
  - if "%PYTHON_ARCH%" == "64" set "ARCH_LABEL=-x64"
  # These are already installed on appveyor
  - set "CONDA_ROOT=C:\Miniconda%BASE_PYTHON_VERSION%%ARCH_LABEL%"
  - set "PATH=%CONDA_ROOT%;%CONDA_ROOT%\Library\bin;%CONDA_ROOT%\Scripts;%PATH%"
  - "conda config --set always_yes yes"
  - "conda config --add pkgs_dirs C:\\condacache\\pkgs"
  - if "%CONDA_CANARY%" == "" (
      conda install conda=%CONDA_VERSION% -q") else (
      conda update -c -q conda-canary conda)
  - "call %CONDA_ROOT%\\Scripts\\activate"
  # Install run dependencies
  - "conda install nsis pillow>=3.1 ruamel_yaml"
  # Install test dependencies
  - "conda install pytest pytest-cov"
  # Install this package
  - "python setup.py develop"
  # Install conda canary before running tests, ensure conda is updated
  - "%CONDA_ROOT%\\Scripts\\activate root"
  - "conda info"
  - "conda list"

# Not a .NET project, we build in the install step instead
build: false

test_script:
  - "%CMD_IN_ENV% pytest --cov=constructor constructor"
  - "%CMD_IN_ENV% python scripts\\run_examples.py"
